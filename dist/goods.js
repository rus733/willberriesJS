(()=>{"use strict";var __webpack_modules__={220:()=>{eval("\n;// CONCATENATED MODULE: ./src/modules/cart.js\nconst cart = () => {\r\n  const cartBtn = document.querySelector('.button-cart');\r\n  const cart = document.querySelector('#modal-cart');\r\n  const closeBtn = cart.querySelector('.modal-close');\r\n\r\n  cartBtn.addEventListener('click', () => {\r\n    cart.style.display = 'flex';\r\n  });\r\n\r\n  closeBtn.addEventListener('click', () => {\r\n    cart.style.display = '';\r\n  });\r\n  //close popup by click to overlay\r\n  cart.addEventListener('click', (e) => {\r\n    if (!e.target.closest('.modal')) {\r\n      cart.style.display = '';\r\n    }\r\n  });\r\n};\r\n\n;// CONCATENATED MODULE: ./src/modules/getGoods.js\nconst getGoods = () => {\r\n  const links = document.querySelectorAll('.navigation-link');\r\n  const more = document.querySelector('.more'); //buton All-view\r\n\r\n  const renderGoods = (goods) => {\r\n    //получим контейнер наших карточек\r\n    const goodsContainer = document.querySelector('.long-goods-list');\r\n\r\n    goodsContainer.innerHTML = ''; //уберем все карточки из верстки\r\n\r\n    //переберем все товары из  массива\r\n    goods.forEach((good) => {\r\n      // теперь создадим элемент , новый блок\r\n      const goodBlock = document.createElement('div');\r\n\r\n      goodBlock.classList.add('col-lg-3');\r\n      goodBlock.classList.add('col-sm-6');\r\n      //теперь в этот блок запишем верстку каждой карточки товара\r\n      //мы  предварительно очистили верстку goodsContainer.innerHTML = ''\r\n      goodBlock.innerHTML = ` \r\n            <div class=\"goods-card\">\r\n                <span class=\"label ${good.label ? null : 'd-none'} \">${good.label}</span>\r\n                <img src=\"db/${good.img}\" alt=\"image: ${good.name}\" class=\"goods-image\">\r\n                <h3 class=\"goods-title\">${good.name}</h3>\r\n                <p class=\"goods-description\">${good.description}</p>\r\n                <button class=\"button goods-card-btn add-to-cart\" data-id=\"${good.id}\">\r\n                  <span class=\"button-price\">$${good.price}</span>\r\n                </button>\r\n            </div>          \r\n      `;\r\n      goodsContainer.append(goodBlock);\r\n    });\r\n  };\r\n\r\n  const getData = (value, category) => {\r\n    //подключимся и получим данные с сервера\r\n    fetch('https://test-willber-default-rtdb.firebaseio.com/db.json') //// /db/db.json\r\n      .then((response) => response.json()) //ответ в виде обьекта response\r\n      //чтобы извлечь данные применим метод json()\r\n      //можно использовать метод text(), ответ придет в виде одной строки\r\n      //но нам нужен обьект , поэтому используем метод json().массив с данными\r\n      //data получено с сервера\r\n      //data кладем в локалСторедж, преобразовав в строку с ключом goods\r\n      //теперь извлекли из локалСторедж преобразовав в массив\r\n      // const dataLocal = JSON.parse(localStorage.getItem('goods'));\r\n      //   console.log('dataLocal: ', dataLocal);\r\n      //совпадают полностью с data полученными из сервера Firebase\r\n\r\n      .then((data) => {\r\n        //применим метод фильтр, отфильтруем по категориям товары\r\n        //если категория присутствует в верстке  мы фильтруем  data  , если категории нет (undefined) , мы присваиваем переменной array полный список data\r\n        const array = category ? data.filter((item) => item[category] === value) : data;\r\n        localStorage.setItem('goods', JSON.stringify(array));\r\n\r\n        // свойство window.location.href для перехода на другую страницу\r\n        // раскроем обьект window.location\r\n        //console.log(window.location);\r\n        // и найдем там свойство pathname: если оно не равно  \"/goods.html\"\r\n        //то переходим на страницу goods  window.location.href = '/goods.html';\r\n        // а   если мы на странице goods то нам нужно получать данные и отрисовывать их\r\n        if (window.location.pathname !== '/goods.html') {\r\n          window.location.href = '/goods.html'; //переведет нас на страницу goods.html\r\n        } else {\r\n          renderGoods(array);\r\n        }\r\n        // при переходе на гооодс нужно запускать рендер и отпрвлять в рендер тот массив который лежит в локал сторедж\r\n      });\r\n  };\r\n\r\n  links.forEach((link) => {\r\n    link.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      const linkValue = link.textContent;\r\n      //извлечем из верстки значение атрибута data-field равное иди gender или category\r\n      //  при помощи метода dataset\r\n      const category = link.dataset.field;\r\n\r\n      getData(linkValue, category);\r\n    });\r\n  });\r\n  // если чтото есть в локолстор  под ключом гуудс  и страница goods.html' то запускаем рендер\r\n  if (localStorage.getItem('goods') && window.location.pathname === '/goods.html') {\r\n    renderGoods(JSON.parse(localStorage.getItem('goods')));\r\n  }\r\n\r\n  if (more) {\r\n    more.addEventListener('click', () => {\r\n      console.log(1212121);\r\n    });\r\n  }\r\n\r\n  //обратимся к глобальному  обьекту localStorage\r\n  //внесем информацию в локал сторедж в ввиде строки ,\r\n  //преобразовать данные(обьект, массив ) в строку\r\n  //  нам поможет метод глобального обьекта JSON stringify()\r\n\r\n  // localStorage.setItem('goods', JSON.stringify([1, 2, 3, 4, 5]));\r\n\r\n  // //мы можем получить ее из локалсторедж с помощью getItem()\r\n\r\n  // console.log(`получено из localStorage.getItem('goods') === ${localStorage.getItem('goods')}`);\r\n\r\n  // const goods = JSON.parse(localStorage.getItem('goods'));\r\n\r\n  // console.log(`получено из localStorage и преобразовано к исходному виду JSON.parse(localStorage.getItem('goods')) === `, goods);\r\n\r\n  // // рассмотрим метод удаления  данных из локал сторедж\r\n  // console.log('до удаления localStorage: ', localStorage);\r\n  // localStorage.removeItem('goods');\r\n  // console.log('после удаления localStorage: ', localStorage);\r\n};\r\n\n;// CONCATENATED MODULE: ./src/modules/search.js\nconst search = () => {\r\n  //\r\n  const input = document.querySelector('.search-block > input');\r\n  const searchBtn = document.querySelector('.search-block > button');\r\n\r\n  const renderGoods = (goods) => {\r\n    //получим контейнер наших карточек\r\n    const goodsContainer = document.querySelector('.long-goods-list');\r\n    goodsContainer.innerHTML = ''; //уберем все карточки из верстки\r\n    //переберем все товары из  массива\r\n    goods.forEach((good) => {\r\n      // теперь создадим элемент , новый блок\r\n      const goodBlock = document.createElement('div');\r\n\r\n      goodBlock.classList.add('col-lg-3');\r\n      goodBlock.classList.add('col-sm-6');\r\n      //теперь в этот блок запишем верстку каждой карточки товара\r\n      //мы  предварительно очистили верстку goodsContainer.innerHTML = ''\r\n      goodBlock.innerHTML = ` \r\n            <div class=\"goods-card\">\r\n                <span class=\"label ${good.label ? null : 'd-none'} \">${good.label}</span>\r\n                <img src=\"db/${good.img}\" alt=\"image: ${good.name}\" class=\"goods-image\">\r\n                <h3 class=\"goods-title\">${good.name}</h3>\r\n                <p class=\"goods-description\">${good.description}</p>\r\n                <button class=\"button goods-card-btn add-to-cart\" data-id=\"${good.id}\">\r\n                  <span class=\"button-price\">$${good.price}</span>\r\n                </button>\r\n            </div>          \r\n      `;\r\n      goodsContainer.append(goodBlock);\r\n    });\r\n  };\r\n\r\n  const getData = (value) => {\r\n    //подключимся и получим данные с сервера\r\n    fetch('https://test-willber-default-rtdb.firebaseio.com/db.json')\r\n      .then((response) => response.json()) //ответ в виде обьекта response\r\n      .then((data) => {\r\n        // мы присваиваем переменной array значение data\r\n        const array = data.filter((good) => good.name.toLowerCase().includes(value.toLowerCase()));\r\n        //console.log(value);\r\n        localStorage.setItem('goods', JSON.stringify(array));\r\n        // а   если мы на странице goods то нам нужно получать данные и отрисовывать их\r\n        if (window.location.pathname !== '/goods.html') {\r\n          window.location.href = '/goods.html'; //переведет нас на страницу goods.html\r\n        } else {\r\n          renderGoods(array);\r\n        }\r\n        // при переходе на гооодс нужно запускать рендер и отпрвлять в рендер тот массив который лежит в локал сторедж\r\n      });\r\n  };\r\n\r\n  //так как при переходе на страницу goods.html на кнопке search отсутствует класс search-block чтобы не было ошибки б которая блокирует скрипт, применим конструкцию try catch\r\n  try {\r\n    searchBtn.addEventListener('click', () => {\r\n      getData(input.value);\r\n    });\r\n  } catch (e) {\r\n    // console.log('верните класс кнопки ', e);\r\n    // console.dir(e);\r\n    console.error(e.message);\r\n    console.error('Уважаемый верстальщик , верните класс пожалуйста');\r\n  }\r\n};\r\n\n;// CONCATENATED MODULE: ./src/goods.js\n\r\n\r\n\r\n\r\ncart();\r\ngetGoods();\r\nsearch();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///220\n")}},__webpack_exports__={};__webpack_modules__[220]()})();