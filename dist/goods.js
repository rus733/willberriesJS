(()=>{"use strict";var __webpack_modules__={220:()=>{eval("\n;// CONCATENATED MODULE: ./src/modules/cart.js\nconst cart = () => {\r\n  const cartBtn = document.querySelector('.button-cart');\r\n  const cart = document.querySelector('#modal-cart');\r\n  const closeBtn = cart.querySelector('.modal-close');\r\n  //контейнер в котором сформированы карточки\r\n  const goodsContainer = document.querySelector('.long-goods-list');\r\n  const cartTable = document.querySelector('.cart-table__goods');\r\n  const modalForm = document.querySelector('.modal-form');\r\n  const cardTableTotal = document.querySelector('.cart-table__total');\r\n  let sum = 0; //обозначим сумму товаров в корзине\r\n\r\n  const getFromStorage = (name) => {\r\n    return localStorage.getItem(name) ? JSON.parse(localStorage.getItem(name)) : [];\r\n  };\r\n\r\n  const updateSum = () => {\r\n    const cart = getFromStorage('cart');\r\n    sum = 0;\r\n    cart.forEach((item) => {\r\n      return (sum += Number(item.price) * Number(item.count));\r\n    });\r\n\r\n    //cardTableTotal.textContent = String(sum);\r\n    cardTableTotal.textContent = `${sum}$`;\r\n  };\r\n\r\n  const deleteCartItem = (id) => {\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    const newCart = cart.filter((good) => {\r\n      return good.id !== id;\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(newCart));\r\n    renderCartGoods(JSON.parse(localStorage.getItem('cart')));\r\n  };\r\n\r\n  const plusCartItem = (id) => {\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    const newCart = cart.map((good) => {\r\n      if (good.id === id) {\r\n        good.count++;\r\n      }\r\n      return good;\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(newCart));\r\n    renderCartGoods(JSON.parse(localStorage.getItem('cart')));\r\n  };\r\n\r\n  const minusCartItem = (id) => {\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    const newCart = cart.map((good) => {\r\n      if (good.id === id) {\r\n        if (good.count > 1) {\r\n          good.count--;\r\n        }\r\n      }\r\n      return good;\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(newCart));\r\n    renderCartGoods(JSON.parse(localStorage.getItem('cart')));\r\n  };\r\n\r\n  const addToCart = (id) => {\r\n    const goods = JSON.parse(localStorage.getItem('goods'));\r\n    //для поиска кликнутого товарар воспользумся методом find\r\n    const clickedGood = goods.find((good) => good.id === id);\r\n    // проверим , есть ли корзина в локал сторедж , если есть считаем ее , если нет образуем ее в виде пустого массива\r\n    //const cart = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) //: [];\r\n    const cart = getFromStorage('cart');\r\n    if (cart.some((good) => good.id === clickedGood.id)) {\r\n      // перебираем все товары и возвращаем их\r\n      cart.map((good) => {\r\n        if (good.id === clickedGood.id) {\r\n          good.count++;\r\n        }\r\n        return good;\r\n      });\r\n    } else {\r\n      clickedGood.count = 1;\r\n      cart.push(clickedGood);\r\n    }\r\n    //запишем изменения в локал сторедж\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  };\r\n\r\n  // рендер\r\n  const renderCartGoods = (goods) => {\r\n    cartTable.innerHTML = '';\r\n    //totalSum = 0;\r\n    //let totalSum = 0; //обозначим сумму товаров в корзине\r\n    //переберем массив goods из корзины(локал сторедж) и сформируем верстку\r\n    goods.forEach((good) => {\r\n      const tr = document.createElement('tr');\r\n      tr.innerHTML = `\r\n      <td>${good.name}</td>\r\n\t\t\t\t\t\t<td>${good.price}$</td>\r\n\t\t\t\t\t\t<td><button class=\"cart-btn-minus\"\">-</button></td>\r\n\t\t\t\t\t\t<td>${good.count}</td>\r\n\t\t\t\t\t\t<td><button class=\"cart-btn-plus\"\">+</button></td>\r\n\t\t\t\t\t\t<td>${+good.price * +good.count}$</td>\r\n\t\t\t\t\t\t<td><button class=\"cart-btn-delete\"\">x</button></td>\r\n      `;\r\n      cartTable.append(tr);\r\n\r\n      tr.addEventListener('click', (e) => {\r\n        if (e.target.classList.contains('cart-btn-minus')) {\r\n          minusCartItem(good.id);\r\n        } else if (e.target.classList.contains('cart-btn-plus')) {\r\n          plusCartItem(good.id);\r\n        } else if (e.target.classList.contains('cart-btn-delete')) {\r\n          deleteCartItem(good.id);\r\n        }\r\n      });\r\n      //подсчет суммы товаров в корзине\r\n      //return (totalSum = totalSum + Number(good.price) * Number(good.count));\r\n    });\r\n\r\n    // if (cardTableTotal) {\r\n    //   cardTableTotal.textContent = `${totalSum}$`;\r\n    // }\r\n    // return totalSum;\r\n    updateSum();\r\n  };\r\n\r\n  // ф отправки форм\r\n  //отправит на тестовое апи весь обьект карт\r\n  const sendForm = () => {\r\n    const cartArray = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\n    const inputName = modalForm.querySelector('[name = \"nameCustomer\"]');\r\n    const inputPhone = modalForm.querySelector('[name = \"phoneCustomer\"]');\r\n    // let inputName = document.getElementsByName('nameCustomer'); //[0] as HTMLInputElement;\r\n    // console.log(' inputName: ', inputName[0].value);\r\n\r\n    // let inputPhone = document.getElementsByName('phoneCustomer'); //[0] as HTMLInputElement);\r\n    // console.log('inputPhone: ', inputPhone[0].value);\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        cart: cartArray,\r\n        name: inputName.value,\r\n        phone: inputPhone.value,\r\n        total: sum,\r\n      }),\r\n    }).then(() => {\r\n      setTimeout(() => {\r\n        cart.style.display = '';\r\n        localStorage.removeItem('cart');\r\n      }, 3000);\r\n      inputName.value = '';\r\n      inputPhone.value = '';\r\n      sum = 0;\r\n    });\r\n  };\r\n\r\n  // кнопка отправки формы\r\n  modalForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    sendForm();\r\n  });\r\n\r\n  //при открытии мобильного окна , необходимо вносить с таблицу данные из cart в localStoredg\r\n  cartBtn.addEventListener('click', () => {\r\n    //получим данные из localStorage\r\n    const cartArray = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\n\r\n    renderCartGoods(cartArray); //рендер товара в корзинеиз локал сторедж\r\n\r\n    cart.style.display = 'flex';\r\n  });\r\n  //close popup\r\n  closeBtn.addEventListener('click', () => {\r\n    cart.style.display = '';\r\n  });\r\n  //close popup by click to overlay\r\n  cart.addEventListener('click', (e) => {\r\n    //добавили , чтоб не закрывалась корзина && e.target.classList.contains('overlay')\r\n    if (!e.target.closest('.modal') && e.target.classList.contains('overlay')) {\r\n      cart.style.display = '';\r\n    }\r\n  });\r\n\r\n  window.addEventListener('keydown', (e) => {\r\n    if (e.key === 'Escape') {\r\n      cart.style.display = '';\r\n    }\r\n  });\r\n\r\n  if (goodsContainer) {\r\n    goodsContainer.addEventListener('click', (e) => {\r\n      if (e.target.closest('.add-to-cart')) {\r\n        const buttonToCart = e.target.closest('.add-to-cart');\r\n        const goodId = buttonToCart.dataset.id;\r\n        addToCart(goodId);\r\n      }\r\n    });\r\n  }\r\n};\r\n\n;// CONCATENATED MODULE: ./src/modules/getGoods.js\nconst getGoods = () => {\r\n  const links = document.querySelectorAll('.navigation-link');\r\n  const more = document.querySelector('.more'); //buton All-view\r\n\r\n  const renderGoods = (goods) => {\r\n    //получим контейнер наших карточек\r\n    const goodsContainer = document.querySelector('.long-goods-list');\r\n    //уберем все карточки из верстки чтобы новые не добавлялись к имеющимся\r\n    goodsContainer.innerHTML = '';\r\n    //переберем все товары из  массива goods и создадим карточки товаров для каждого элемента  good\r\n    goods.forEach((good) => {\r\n      //  создадим элемент , новый блок\r\n      const goodBlock = document.createElement('div');\r\n      // добавим ему классы из нашей верстки\r\n      goodBlock.classList.add('col-lg-3');\r\n      goodBlock.classList.add('col-sm-6');\r\n      //теперь в этот блок запишем верстку каждой карточки товара\r\n      //мы  предварительно очистили верстку goodsContainer.innerHTML = ''\r\n      goodBlock.innerHTML = ` \r\n            <div class=\"goods-card\">\r\n                <span class=\"label ${good.label ? null : 'd-none'} \">${good.label}</span>\r\n                <img src=\"db/${good.img}\" alt=\"image: ${good.name}\" class=\"goods-image\">\r\n                <h3 class=\"goods-title\">${good.name}</h3>\r\n                <p class=\"goods-description\">${good.description}</p>\r\n                <button class=\"button goods-card-btn add-to-cart\" data-id=\"${good.id}\">\r\n                  <span class=\"button-price\">$${good.price}</span>\r\n                </button>\r\n            </div>          \r\n      `;\r\n      //в контейнер добавим новую карточку - элемент - блок\r\n      goodsContainer.append(goodBlock);\r\n      // и так для каждого элемента полученного в аргумент массива\r\n    });\r\n  };\r\n\r\n  const getData = (value, category) => {\r\n    //подключимся и получим данные с сервера\r\n    fetch('https://test-willber-default-rtdb.firebaseio.com/db.json') //// /db/db.json\r\n      .then((response) => response.json()) //ответ в виде обьекта response\r\n      //чтобы извлечь данные применим метод json()\r\n      .then((data) => {\r\n        //применим метод фильтр, отфильтруем по категориям товары\r\n        //если категория присутствует в верстке  мы фильтруем  data  , если категории нет (undefined) , мы присваиваем переменной array полный список data\r\n        const array = category ? data.filter((item) => item[category] === value) : data;\r\n        localStorage.setItem('goods', JSON.stringify(array));\r\n        // свойство window.location.href для перехода на другую страницу\r\n        if (window.location.pathname !== '/goods.html') {\r\n          window.location.href = '/goods.html'; //переведет нас на страницу goods.html\r\n        } else {\r\n          renderGoods(array);\r\n        }\r\n        // при переходе на goods нужно запускать рендер и отпрвлять в рендер тот массив который лежит в localStorage\r\n      });\r\n  };\r\n\r\n  links.forEach((link) => {\r\n    link.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      const linkValue = link.textContent;\r\n      //извлечем из верстки значение атрибута data-field равное иди gender или category\r\n      //  при помощи метода dataset\r\n      const category = link.dataset.field;\r\n      getData(linkValue, category);\r\n    });\r\n  });\r\n  // если чтото есть в локолстор  под ключом гуудс  и страница goods.html' то запускаем рендер\r\n  if (localStorage.getItem('goods') && window.location.pathname === '/goods.html') {\r\n    renderGoods(JSON.parse(localStorage.getItem('goods')));\r\n  }\r\n  // added homework connect button wievAll in site imdex.html\r\n  if (more) {\r\n    more.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      getData();\r\n    });\r\n  }\r\n};\r\n\n;// CONCATENATED MODULE: ./src/modules/search.js\nconst search = () => {\r\n  //\r\n  const input = document.querySelector('.search-block > input');\r\n  const searchBtn = document.querySelector('.search-block > button');\r\n\r\n  const renderGoods = (goods) => {\r\n    //получим контейнер наших карточек\r\n    const goodsContainer = document.querySelector('.long-goods-list');\r\n    goodsContainer.innerHTML = ''; //уберем все карточки из верстки\r\n    //переберем все товары из  массива\r\n    goods.forEach((good) => {\r\n      // теперь создадим элемент , новый блок\r\n      const goodBlock = document.createElement('div');\r\n\r\n      goodBlock.classList.add('col-lg-3');\r\n      goodBlock.classList.add('col-sm-6');\r\n      //теперь в этот блок запишем верстку каждой карточки товара\r\n      //мы  предварительно очистили верстку goodsContainer.innerHTML = ''\r\n      goodBlock.innerHTML = ` \r\n            <div class=\"goods-card\">\r\n                <span class=\"label ${good.label ? null : 'd-none'} \">${good.label}</span>\r\n                <img src=\"db/${good.img}\" alt=\"image: ${good.name}\" class=\"goods-image\">\r\n                <h3 class=\"goods-title\">${good.name}</h3>\r\n                <p class=\"goods-description\">${good.description}</p>\r\n                <button class=\"button goods-card-btn add-to-cart\" data-id=\"${good.id}\">\r\n                  <span class=\"button-price\">$${good.price}</span>\r\n                </button>\r\n            </div>          \r\n      `;\r\n      goodsContainer.append(goodBlock);\r\n    });\r\n  };\r\n\r\n  const getData = (value) => {\r\n    //подключимся и получим данные с сервера\r\n    fetch('https://test-willber-default-rtdb.firebaseio.com/db.json')\r\n      .then((response) => response.json()) //ответ в виде обьекта response\r\n      .then((data) => {\r\n        // мы присваиваем переменной array значение data\r\n        const array = data.filter((good) => good.name.toLowerCase().includes(value.toLowerCase()));\r\n        //console.log(value);\r\n        localStorage.setItem('goods', JSON.stringify(array));\r\n        // а   если мы на странице goods то нам нужно получать данные и отрисовывать их\r\n        if (window.location.pathname !== '/goods.html') {\r\n          window.location.href = '/goods.html'; //переведет нас на страницу goods.html\r\n        } else {\r\n          renderGoods(array);\r\n        }\r\n        // при переходе на гооодс нужно запускать рендер и отпрвлять в рендер тот массив который лежит в локал сторедж\r\n      });\r\n  };\r\n\r\n  //так как при переходе на страницу goods.html на кнопке search отсутствует класс search-block чтобы не было ошибки б которая блокирует скрипт, применим конструкцию try catch\r\n  try {\r\n    searchBtn.addEventListener('click', () => {\r\n      getData(input.value);\r\n    });\r\n  } catch (e) {\r\n    // console.log('верните класс кнопки ', e);\r\n    // console.dir(e);\r\n    console.error(e.message);\r\n    console.error('Уважаемый верстальщик , верните класс пожалуйста');\r\n  }\r\n};\r\n\n;// CONCATENATED MODULE: ./src/goods.js\n\r\n\r\n\r\n\r\ncart();\r\ngetGoods();\r\nsearch();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///220\n")}},__webpack_exports__={};__webpack_modules__[220]()})();